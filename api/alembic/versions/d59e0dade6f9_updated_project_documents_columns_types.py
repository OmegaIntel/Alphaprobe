"""Updated project, documents columns types

Revision ID: d59e0dade6f9
Revises: 41f5341ce6a9
Create Date: 2025-03-26 17:48:30.911678

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision: str = 'd59e0dade6f9'
down_revision: Union[str, None] = '41f5341ce6a9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('temp_project_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=True),
    sa.Column('user_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_index(op.f('ix_projects_temp_project_id'), 'projects', ['temp_project_id'], unique=False)
    op.create_table('reports_table',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('project_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('query', sa.Text(), nullable=False),
    sa.Column('response', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reports_table_id'), 'reports_table', ['id'], unique=False)
    op.create_table('documents_table',
    sa.Column('id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('project_id', sqlalchemy_utils.types.uuid.UUIDType(binary=False), nullable=False),
    sa.Column('file_name', sa.Text(), nullable=False),
    sa.Column('file_path', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_table_id'), 'documents_table', ['id'], unique=False)
    op.alter_column('rag_sessions', 'user_id',
               existing_type=mysql.CHAR(length=36),
               type_=sqlalchemy_utils.types.uuid.UUIDType(binary=False),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('rag_sessions', 'user_id',
               existing_type=sqlalchemy_utils.types.uuid.UUIDType(binary=False),
               type_=mysql.CHAR(length=36),
               existing_nullable=False)
    op.drop_index(op.f('ix_documents_table_id'), table_name='documents_table')
    op.drop_table('documents_table')
    op.drop_index(op.f('ix_reports_table_id'), table_name='reports_table')
    op.drop_table('reports_table')
    op.drop_index(op.f('ix_projects_temp_project_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_table('projects')
    # ### end Alembic commands ###
